' Generated by the protocol buffer compiler.  DO NOT EDIT!
' source: google/protobuf/api.proto
#Region "Designer generated code"

Imports pbc = Google.Protobuf.Collections
Imports pbr = Google.Protobuf.Reflection

Namespace Google.Protobuf.WellKnownTypes

    ''' <summary>Holder for reflection information generated from google/protobuf/api.proto</summary>
    Public Partial Module ApiReflection

#Region "Descriptor"
        ''' <summary>File descriptor for google/protobuf/api.proto</summary>
        Public ReadOnly Property Descriptor As pbr.FileDescriptor
            Get
                Return descriptorField
            End Get
        End Property

        Private descriptorField As pbr.FileDescriptor

        Sub New()
            Dim descriptorData As Byte() = Global.System.Convert.FromBase64String(String.Concat("Chlnb29nbGUvcHJvdG9idWYvYXBpLnByb3RvEg9nb29nbGUucHJvdG9idWYa", "JGdvb2dsZS9wcm90b2J1Zi9zb3VyY2VfY29udGV4dC5wcm90bxoaZ29vZ2xl", "L3Byb3RvYnVmL3R5cGUucHJvdG8igQIKA0FwaRIMCgRuYW1lGAEgASgJEigK", "B21ldGhvZHMYAiADKAsyFy5nb29nbGUucHJvdG9idWYuTWV0aG9kEigKB29w", "dGlvbnMYAyADKAsyFy5nb29nbGUucHJvdG9idWYuT3B0aW9uEg8KB3ZlcnNp", "b24YBCABKAkSNgoOc291cmNlX2NvbnRleHQYBSABKAsyHi5nb29nbGUucHJv", "dG9idWYuU291cmNlQ29udGV4dBImCgZtaXhpbnMYBiADKAsyFi5nb29nbGUu", "cHJvdG9idWYuTWl4aW4SJwoGc3ludGF4GAcgASgOMhcuZ29vZ2xlLnByb3Rv", "YnVmLlN5bnRheCLVAQoGTWV0aG9kEgwKBG5hbWUYASABKAkSGAoQcmVxdWVz", "dF90eXBlX3VybBgCIAEoCRIZChFyZXF1ZXN0X3N0cmVhbWluZxgDIAEoCBIZ", "ChFyZXNwb25zZV90eXBlX3VybBgEIAEoCRIaChJyZXNwb25zZV9zdHJlYW1p", "bmcYBSABKAgSKAoHb3B0aW9ucxgGIAMoCzIXLmdvb2dsZS5wcm90b2J1Zi5P", "cHRpb24SJwoGc3ludGF4GAcgASgOMhcuZ29vZ2xlLnByb3RvYnVmLlN5bnRh", "eCIjCgVNaXhpbhIMCgRuYW1lGAEgASgJEgwKBHJvb3QYAiABKAlCSwoTY29t", "Lmdvb2dsZS5wcm90b2J1ZkIIQXBpUHJvdG9QAaABAaICA0dQQqoCHkdvb2ds", "ZS5Qcm90b2J1Zi5XZWxsS25vd25UeXBlc2IGcHJvdG8z"))
            descriptorField = pbr.FileDescriptor.FromGeneratedCode(descriptorData, New pbr.FileDescriptor() {Global.Google.Protobuf.WellKnownTypes.SourceContextReflection.Descriptor, Global.Google.Protobuf.WellKnownTypes.TypeReflection.Descriptor}, New pbr.GeneratedClrTypeInfo(Nothing, New pbr.GeneratedClrTypeInfo() {New pbr.GeneratedClrTypeInfo(GetType(Global.Google.Protobuf.WellKnownTypes.Api), Global.Google.Protobuf.WellKnownTypes.Api.Parser, {"Name", "Methods", "Options", "Version", "SourceContext", "Mixins", "Syntax"}, Nothing, Nothing, Nothing), New pbr.GeneratedClrTypeInfo(GetType(Global.Google.Protobuf.WellKnownTypes.Method), Global.Google.Protobuf.WellKnownTypes.Method.Parser, {"Name", "RequestTypeUrl", "RequestStreaming", "ResponseTypeUrl", "ResponseStreaming", "Options", "Syntax"}, Nothing, Nothing, Nothing), New pbr.GeneratedClrTypeInfo(GetType(Global.Google.Protobuf.WellKnownTypes.Mixin), Global.Google.Protobuf.WellKnownTypes.Mixin.Parser, {"Name", "Root"}, Nothing, Nothing, Nothing)}))
        End Sub
#End Region

    End Module
#Region "Messages"
    ''' <summary>
    '''  Api is a light-weight descriptor for a protocol buffer service.
    ''' </summary>
    Public NotInheritable Partial Class Api
        Implements IMessageType(Of Api)

        Private Shared ReadOnly _parser As MessageParserType(Of Api) = New MessageParserType(Of Api)(Function() New Api())

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Shared ReadOnly Property Parser As MessageParserType(Of Api)
            Get
                Return _parser
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Shared ReadOnly Property DescriptorProp As pbr.MessageDescriptor
            Get
                Return Global.Google.Protobuf.WellKnownTypes.ApiReflection.Descriptor.MessageTypes(0)
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Private ReadOnly Property Descriptor As pbr.MessageDescriptor Implements IMessage.Descriptor
            Get
                Return DescriptorProp
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub New()
            OnConstruction()
        End Sub

        Partial Private Sub OnConstruction()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub New(other As Api)
            Me.New()
            name_ = other.name_
            methods_ = other.methods_.Clone()
            options_ = other.options_.Clone()
            version_ = other.version_
            SourceContext = If(other.sourceContext_ IsNot Nothing, other.SourceContext.Clone(), Nothing)
            mixins_ = other.mixins_.Clone()
            syntax_ = other.syntax_
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Function Clone() As Api Implements IDeepCloneable(Of Api).Clone
            Return New Api(Me)
        End Function

        ''' <summary>Field number for the "name" field.</summary>
        Public Const NameFieldNumber As Integer = 1
        Private name_ As String = ""
        ''' <summary>
        '''  The fully qualified name of this api, including package name
        '''  followed by the api's simple name.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Name As String
            Get
                Return name_
            End Get
            Set(value As String)
                name_ = CheckNotNull(value, "value")
            End Set
        End Property

        ''' <summary>Field number for the "methods" field.</summary>
        Public Const MethodsFieldNumber As Integer = 2
        Private Shared ReadOnly _repeated_methods_codec As FieldCodecType(Of Global.Google.Protobuf.WellKnownTypes.Method) = FieldCodec.ForMessage(18, Global.Google.Protobuf.WellKnownTypes.Method.Parser)
        Private ReadOnly methods_ As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Method) = New pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Method)()
        ''' <summary>
        '''  The methods of this api, in unspecified order.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public ReadOnly Property Methods As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Method)
            Get
                Return methods_
            End Get
        End Property

        ''' <summary>Field number for the "options" field.</summary>
        Public Const OptionsFieldNumber As Integer = 3
        Private Shared ReadOnly _repeated_options_codec As FieldCodecType(Of Global.Google.Protobuf.WellKnownTypes.Option) = FieldCodec.ForMessage(26, Global.Google.Protobuf.WellKnownTypes.Option.Parser)
        Private ReadOnly options_ As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Option) = New pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Option)()
        ''' <summary>
        '''  Any metadata attached to the API.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public ReadOnly Property Options As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Option)
            Get
                Return options_
            End Get
        End Property

        ''' <summary>Field number for the "version" field.</summary>
        Public Const VersionFieldNumber As Integer = 4
        Private version_ As String = ""
        ''' <summary>
        '''  A version string for this api. If specified, must have the form
        '''  `major-version.minor-version`, as in `1.10`. If the minor version
        '''  is omitted, it defaults to zero. If the entire version field is
        '''  empty, the major version is derived from the package name, as
        '''  outlined below. If the field is not empty, the version in the
        '''  package name will be verified to be consistent with what is
        '''  provided here.
        '''
        '''  The versioning schema uses [semantic
        '''  versioning](http://semver.org) where the major version number
        '''  indicates a breaking change and the minor version an additive,
        '''  non-breaking change. Both version numbers are signals to users
        '''  what to expect from different versions, and should be carefully
        '''  chosen based on the product plan.
        '''
        '''  The major version is also reflected in the package name of the
        '''  API, which must end in `v&lt;major-version>`, as in
        '''  `google.feature.v1`. For major versions 0 and 1, the suffix can
        '''  be omitted. Zero major versions must only be used for
        '''  experimental, none-GA apis.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Version As String
            Get
                Return version_
            End Get
            Set(value As String)
                version_ = CheckNotNull(value, "value")
            End Set
        End Property

        ''' <summary>Field number for the "source_context" field.</summary>
        Public Const SourceContextFieldNumber As Integer = 5
        Private sourceContext_ As Global.Google.Protobuf.WellKnownTypes.SourceContext
        ''' <summary>
        '''  Source context for the protocol buffer service represented by this
        '''  message.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property SourceContext As Global.Google.Protobuf.WellKnownTypes.SourceContext
            Get
                Return sourceContext_
            End Get
            Set(value As Global.Google.Protobuf.WellKnownTypes.SourceContext)
                sourceContext_ = value
            End Set
        End Property

        ''' <summary>Field number for the "mixins" field.</summary>
        Public Const MixinsFieldNumber As Integer = 6
        Private Shared ReadOnly _repeated_mixins_codec As FieldCodecType(Of Global.Google.Protobuf.WellKnownTypes.Mixin) = FieldCodec.ForMessage(50, Global.Google.Protobuf.WellKnownTypes.Mixin.Parser)
        Private ReadOnly mixins_ As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Mixin) = New pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Mixin)()
        ''' <summary>
        '''  Included APIs. See [Mixin][].
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public ReadOnly Property Mixins As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Mixin)
            Get
                Return mixins_
            End Get
        End Property

        ''' <summary>Field number for the "syntax" field.</summary>
        Public Const SyntaxFieldNumber As Integer = 7
        Private syntax_ As Global.Google.Protobuf.WellKnownTypes.Syntax = 0
        ''' <summary>
        '''  The source syntax of the service.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Syntax As Global.Google.Protobuf.WellKnownTypes.Syntax
            Get
                Return syntax_
            End Get
            Set(value As Global.Google.Protobuf.WellKnownTypes.Syntax)
                syntax_ = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function Equals(other As Object) As Boolean
            Return Equals(TryCast(other, Api))
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overloads Function Equals(other As Api) As Boolean Implements IEquatable(Of Api).Equals
            If ReferenceEquals(other, Nothing) Then
                Return False
            End If

            If ReferenceEquals(other, Me) Then
                Return True
            End If

            If Not Equals(Name, other.Name) Then Return False
            If Not methods_.Equals(other.methods_) Then Return False
            If Not options_.Equals(other.options_) Then Return False
            If Not Equals(Version, other.Version) Then Return False
            If Not Object.Equals(SourceContext, other.SourceContext) Then Return False
            If Not mixins_.Equals(other.mixins_) Then Return False
            If Syntax <> other.Syntax Then Return False
            Return True
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function GetHashCode() As Integer
            Dim hash = 1
            If Name.Length <> 0 Then hash = hash Xor Name.GetHashCode()
            hash = hash Xor methods_.GetHashCode()
            hash = hash Xor options_.GetHashCode()
            If Version.Length <> 0 Then hash = hash Xor Version.GetHashCode()
            If sourceContext_ IsNot Nothing Then hash = hash Xor SourceContext.GetHashCode()
            hash = hash Xor mixins_.GetHashCode()
            If Syntax <> 0 Then hash = hash Xor Syntax.GetHashCode()
            Return hash
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function ToString() As String
            Return JsonFormatter.ToDiagnosticString(Me)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub WriteTo(output As CodedOutputStream) Implements IMessage.WriteTo
            If Name.Length <> 0 Then
                output.WriteRawTag(10)
                output.WriteString(Name)
            End If

            methods_.WriteTo(output, _repeated_methods_codec)
            options_.WriteTo(output, _repeated_options_codec)

            If Version.Length <> 0 Then
                output.WriteRawTag(34)
                output.WriteString(Version)
            End If

            If sourceContext_ IsNot Nothing Then
                output.WriteRawTag(42)
                output.WriteMessage(SourceContext)
            End If

            mixins_.WriteTo(output, _repeated_mixins_codec)

            If Syntax <> 0 Then
                output.WriteRawTag(56)
                output.WriteEnum(CInt(Syntax))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Function CalculateSize() As Integer Implements IMessage.CalculateSize
            Dim size = 0

            If Name.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(Name)
            End If

            size += methods_.CalculateSize(_repeated_methods_codec)
            size += options_.CalculateSize(_repeated_options_codec)

            If Version.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(Version)
            End If

            If sourceContext_ IsNot Nothing Then
                size += 1 + CodedOutputStream.ComputeMessageSize(SourceContext)
            End If

            size += mixins_.CalculateSize(_repeated_mixins_codec)

            If Syntax <> 0 Then
                size += 1 + CodedOutputStream.ComputeEnumSize(CInt(Syntax))
            End If

            Return size
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub MergeFrom(other As Api) Implements IMessageType(Of Api).MergeFrom
            If other Is Nothing Then
                Return
            End If

            If other.Name.Length <> 0 Then
                Name = other.Name
            End If

            methods_.Add(other.methods_)
            options_.Add(other.options_)

            If other.Version.Length <> 0 Then
                Version = other.Version
            End If

            If other.sourceContext_ IsNot Nothing Then
                If sourceContext_ Is Nothing Then
                    sourceContext_ = New Global.Google.Protobuf.WellKnownTypes.SourceContext()
                End If

                SourceContext.MergeFrom(other.SourceContext)
            End If

            mixins_.Add(other.mixins_)

            If other.Syntax <> 0 Then
                Syntax = other.Syntax
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub MergeFrom(input As CodedInputStream) Implements IMessage.MergeFrom
            Dim tag As UInteger

            While (CSharpImpl.__Assign(tag, input.ReadTag())) <> 0

                Select Case tag
                    Case 10
                        Name = input.ReadString()
                        Exit Select
                    Case 18
                        methods_.AddEntriesFrom(input, _repeated_methods_codec)
                        Exit Select
                    Case 26
                        options_.AddEntriesFrom(input, _repeated_options_codec)
                        Exit Select
                    Case 34
                        Version = input.ReadString()
                        Exit Select
                    Case 42

                        If sourceContext_ Is Nothing Then
                            sourceContext_ = New Global.Google.Protobuf.WellKnownTypes.SourceContext()
                        End If

                        input.ReadMessage(sourceContext_)
                        Exit Select
                    Case 50
                        mixins_.AddEntriesFrom(input, _repeated_mixins_codec)
                        Exit Select
                    Case 56
                        syntax_ = CType(input.ReadEnum(), Global.Google.Protobuf.WellKnownTypes.Syntax)
                        Exit Select
                    Case Else
                        input.SkipLastField()
                End Select
            End While
        End Sub

        Private Class CSharpImpl
            <Obsolete("Please refactor calling code to use normal Visual Basic assignment")>
            Shared Function __Assign(Of T)(ByRef target As T, value As T) As T
                target = value
                Return value
            End Function
        End Class
    End Class

    ''' <summary>
    '''  Method represents a method of an api.
    ''' </summary>
    Public NotInheritable Partial Class Method
        Implements IMessageType(Of Method)

        Private Shared ReadOnly _parser As MessageParserType(Of Method) = New MessageParserType(Of Method)(Function() New Method())

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Shared ReadOnly Property Parser As MessageParserType(Of Method)
            Get
                Return _parser
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Shared ReadOnly Property DescriptorProp As pbr.MessageDescriptor
            Get
                Return Global.Google.Protobuf.WellKnownTypes.ApiReflection.Descriptor.MessageTypes(1)
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Private ReadOnly Property Descriptor As pbr.MessageDescriptor Implements IMessage.Descriptor
            Get
                Return DescriptorProp
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub New()
            OnConstruction()
        End Sub

        Partial Private Sub OnConstruction()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub New(other As Method)
            Me.New()
            name_ = other.name_
            requestTypeUrl_ = other.requestTypeUrl_
            requestStreaming_ = other.requestStreaming_
            responseTypeUrl_ = other.responseTypeUrl_
            responseStreaming_ = other.responseStreaming_
            options_ = other.options_.Clone()
            syntax_ = other.syntax_
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Function Clone() As Method Implements IDeepCloneable(Of Method).Clone
            Return New Method(Me)
        End Function

        ''' <summary>Field number for the "name" field.</summary>
        Public Const NameFieldNumber As Integer = 1
        Private name_ As String = ""
        ''' <summary>
        '''  The simple name of this method.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Name As String
            Get
                Return name_
            End Get
            Set(value As String)
                name_ = CheckNotNull(value, "value")
            End Set
        End Property

        ''' <summary>Field number for the "request_type_url" field.</summary>
        Public Const RequestTypeUrlFieldNumber As Integer = 2
        Private requestTypeUrl_ As String = ""
        ''' <summary>
        '''  A URL of the input message type.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property RequestTypeUrl As String
            Get
                Return requestTypeUrl_
            End Get
            Set(value As String)
                requestTypeUrl_ = CheckNotNull(value, "value")
            End Set
        End Property

        ''' <summary>Field number for the "request_streaming" field.</summary>
        Public Const RequestStreamingFieldNumber As Integer = 3
        Private requestStreaming_ As Boolean
        ''' <summary>
        '''  If true, the request is streamed.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property RequestStreaming As Boolean
            Get
                Return requestStreaming_
            End Get
            Set(value As Boolean)
                requestStreaming_ = value
            End Set
        End Property

        ''' <summary>Field number for the "response_type_url" field.</summary>
        Public Const ResponseTypeUrlFieldNumber As Integer = 4
        Private responseTypeUrl_ As String = ""
        ''' <summary>
        '''  The URL of the output message type.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property ResponseTypeUrl As String
            Get
                Return responseTypeUrl_
            End Get
            Set(value As String)
                responseTypeUrl_ = CheckNotNull(value, "value")
            End Set
        End Property

        ''' <summary>Field number for the "response_streaming" field.</summary>
        Public Const ResponseStreamingFieldNumber As Integer = 5
        Private responseStreaming_ As Boolean
        ''' <summary>
        '''  If true, the response is streamed.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property ResponseStreaming As Boolean
            Get
                Return responseStreaming_
            End Get
            Set(value As Boolean)
                responseStreaming_ = value
            End Set
        End Property

        ''' <summary>Field number for the "options" field.</summary>
        Public Const OptionsFieldNumber As Integer = 6
        Private Shared ReadOnly _repeated_options_codec As FieldCodecType(Of Global.Google.Protobuf.WellKnownTypes.Option) = FieldCodec.ForMessage(50, Global.Google.Protobuf.WellKnownTypes.Option.Parser)
        Private ReadOnly options_ As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Option) = New pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Option)()
        ''' <summary>
        '''  Any metadata attached to the method.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public ReadOnly Property Options As pbc.RepeatedField(Of Global.Google.Protobuf.WellKnownTypes.Option)
            Get
                Return options_
            End Get
        End Property

        ''' <summary>Field number for the "syntax" field.</summary>
        Public Const SyntaxFieldNumber As Integer = 7
        Private syntax_ As Global.Google.Protobuf.WellKnownTypes.Syntax = 0
        ''' <summary>
        '''  The source syntax of this method.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Syntax As Global.Google.Protobuf.WellKnownTypes.Syntax
            Get
                Return syntax_
            End Get
            Set(value As Global.Google.Protobuf.WellKnownTypes.Syntax)
                syntax_ = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function Equals(other As Object) As Boolean
            Return Equals(TryCast(other, Method))
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overloads Function Equals(other As Method) As Boolean Implements IEquatable(Of Method).Equals
            If ReferenceEquals(other, Nothing) Then
                Return False
            End If

            If ReferenceEquals(other, Me) Then
                Return True
            End If

            If Not Equals(Name, other.Name) Then Return False
            If Not Equals(RequestTypeUrl, other.RequestTypeUrl) Then Return False
            If RequestStreaming <> other.RequestStreaming Then Return False
            If Not Equals(ResponseTypeUrl, other.ResponseTypeUrl) Then Return False
            If ResponseStreaming <> other.ResponseStreaming Then Return False
            If Not options_.Equals(other.options_) Then Return False
            If Syntax <> other.Syntax Then Return False
            Return True
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function GetHashCode() As Integer
            Dim hash = 1
            If Name.Length <> 0 Then hash = hash Xor Name.GetHashCode()
            If RequestTypeUrl.Length <> 0 Then hash = hash Xor RequestTypeUrl.GetHashCode()
            If RequestStreaming <> False Then hash = hash Xor RequestStreaming.GetHashCode()
            If ResponseTypeUrl.Length <> 0 Then hash = hash Xor ResponseTypeUrl.GetHashCode()
            If ResponseStreaming <> False Then hash = hash Xor ResponseStreaming.GetHashCode()
            hash = hash Xor options_.GetHashCode()
            If Syntax <> 0 Then hash = hash Xor Syntax.GetHashCode()
            Return hash
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function ToString() As String
            Return JsonFormatter.ToDiagnosticString(Me)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub WriteTo(output As CodedOutputStream) Implements IMessage.WriteTo
            If Name.Length <> 0 Then
                output.WriteRawTag(10)
                output.WriteString(Name)
            End If

            If RequestTypeUrl.Length <> 0 Then
                output.WriteRawTag(18)
                output.WriteString(RequestTypeUrl)
            End If

            If RequestStreaming <> False Then
                output.WriteRawTag(24)
                output.WriteBool(RequestStreaming)
            End If

            If ResponseTypeUrl.Length <> 0 Then
                output.WriteRawTag(34)
                output.WriteString(ResponseTypeUrl)
            End If

            If ResponseStreaming <> False Then
                output.WriteRawTag(40)
                output.WriteBool(ResponseStreaming)
            End If

            options_.WriteTo(output, _repeated_options_codec)

            If Syntax <> 0 Then
                output.WriteRawTag(56)
                output.WriteEnum(CInt(Syntax))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Function CalculateSize() As Integer Implements IMessage.CalculateSize
            Dim size = 0

            If Name.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(Name)
            End If

            If RequestTypeUrl.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(RequestTypeUrl)
            End If

            If RequestStreaming <> False Then
                size += 1 + 1
            End If

            If ResponseTypeUrl.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(ResponseTypeUrl)
            End If

            If ResponseStreaming <> False Then
                size += 1 + 1
            End If

            size += options_.CalculateSize(_repeated_options_codec)

            If Syntax <> 0 Then
                size += 1 + CodedOutputStream.ComputeEnumSize(CInt(Syntax))
            End If

            Return size
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub MergeFrom(other As Method) Implements IMessageType(Of Method).MergeFrom
            If other Is Nothing Then
                Return
            End If

            If other.Name.Length <> 0 Then
                Name = other.Name
            End If

            If other.RequestTypeUrl.Length <> 0 Then
                RequestTypeUrl = other.RequestTypeUrl
            End If

            If other.RequestStreaming <> False Then
                RequestStreaming = other.RequestStreaming
            End If

            If other.ResponseTypeUrl.Length <> 0 Then
                ResponseTypeUrl = other.ResponseTypeUrl
            End If

            If other.ResponseStreaming <> False Then
                ResponseStreaming = other.ResponseStreaming
            End If

            options_.Add(other.options_)

            If other.Syntax <> 0 Then
                Syntax = other.Syntax
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub MergeFrom(input As CodedInputStream) Implements IMessage.MergeFrom
            Dim tag As UInteger

            While (CSharpImpl.__Assign(tag, input.ReadTag())) <> 0

                Select Case tag
                    Case 10
                        Name = input.ReadString()
                        Exit Select
                    Case 18
                        RequestTypeUrl = input.ReadString()
                        Exit Select
                    Case 24
                        RequestStreaming = input.ReadBool()
                        Exit Select
                    Case 34
                        ResponseTypeUrl = input.ReadString()
                        Exit Select
                    Case 40
                        ResponseStreaming = input.ReadBool()
                        Exit Select
                    Case 50
                        options_.AddEntriesFrom(input, _repeated_options_codec)
                        Exit Select
                    Case 56
                        syntax_ = CType(input.ReadEnum(), Global.Google.Protobuf.WellKnownTypes.Syntax)
                        Exit Select
                    Case Else
                        input.SkipLastField()
                End Select
            End While
        End Sub

        Private Class CSharpImpl
            <Obsolete("Please refactor calling code to use normal Visual Basic assignment")>
            Shared Function __Assign(Of T)(ByRef target As T, value As T) As T
                target = value
                Return value
            End Function
        End Class
    End Class

    ''' <summary>
    '''  Declares an API to be included in this API. The including API must
    '''  redeclare all the methods from the included API, but documentation
    '''  and options are inherited as follows:
    '''
    '''  - If after comment and whitespace stripping, the documentation
    '''    string of the redeclared method is empty, it will be inherited
    '''    from the original method.
    '''
    '''  - Each annotation belonging to the service config (http,
    '''    visibility) which is not set in the redeclared method will be
    '''    inherited.
    '''
    '''  - If an http annotation is inherited, the path pattern will be
    '''    modified as follows. Any version prefix will be replaced by the
    '''    version of the including API plus the [root][] path if specified.
    '''
    '''  Example of a simple mixin:
    '''
    '''      package google.acl.v1;
    '''      service AccessControl {
    '''        // Get the underlying ACL object.
    '''        rpc GetAcl(GetAclRequest) returns (Acl) {
    '''          option (google.api.http).get = "/v1/{resource=**}:getAcl";
    '''        }
    '''      }
    '''
    '''      package google.storage.v2;
    '''      service Storage {
    '''        rpc GetAcl(GetAclRequest) returns (Acl);
    '''
    '''        // Get a data record.
    '''        rpc GetData(GetDataRequest) returns (Data) {
    '''          option (google.api.http).get = "/v2/{resource=**}";
    '''        }
    '''      }
    '''
    '''  Example of a mixin configuration:
    '''
    '''      apis:
    '''      - name: google.storage.v2.Storage
    '''        mixins:
    '''        - name: google.acl.v1.AccessControl
    '''
    '''  The mixin construct implies that all methods in `AccessControl` are
    '''  also declared with same name and request/response types in
    '''  `Storage`. A documentation generator or annotation processor will
    '''  see the effective `Storage.GetAcl` method after inherting
    '''  documentation and annotations as follows:
    '''
    '''      service Storage {
    '''        // Get the underlying ACL object.
    '''        rpc GetAcl(GetAclRequest) returns (Acl) {
    '''          option (google.api.http).get = "/v2/{resource=**}:getAcl";
    '''        }
    '''        ...
    '''      }
    '''
    '''  Note how the version in the path pattern changed from `v1` to `v2`.
    '''
    '''  If the `root` field in the mixin is specified, it should be a
    '''  relative path under which inherited HTTP paths are placed. Example:
    '''
    '''      apis:
    '''      - name: google.storage.v2.Storage
    '''        mixins:
    '''        - name: google.acl.v1.AccessControl
    '''          root: acls
    '''
    '''  This implies the following inherited HTTP annotation:
    '''
    '''      service Storage {
    '''        // Get the underlying ACL object.
    '''        rpc GetAcl(GetAclRequest) returns (Acl) {
    '''          option (google.api.http).get = "/v2/acls/{resource=**}:getAcl";
    '''        }
    '''        ...
    '''      }
    ''' </summary>
    Public NotInheritable Partial Class Mixin
        Implements IMessageType(Of Mixin)

        Private Shared ReadOnly _parser As MessageParserType(Of Mixin) = New MessageParserType(Of Mixin)(Function() New Mixin())

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Shared ReadOnly Property Parser As MessageParserType(Of Mixin)
            Get
                Return _parser
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Shared ReadOnly Property DescriptorProp As pbr.MessageDescriptor
            Get
                Return Global.Google.Protobuf.WellKnownTypes.ApiReflection.Descriptor.MessageTypes(2)
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Private ReadOnly Property Descriptor As pbr.MessageDescriptor Implements IMessage.Descriptor
            Get
                Return DescriptorProp
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub New()
            OnConstruction()
        End Sub

        Partial Private Sub OnConstruction()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub New(other As Mixin)
            Me.New()
            name_ = other.name_
            root_ = other.root_
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Function Clone() As Mixin Implements IDeepCloneable(Of Mixin).Clone
            Return New Mixin(Me)
        End Function

        ''' <summary>Field number for the "name" field.</summary>
        Public Const NameFieldNumber As Integer = 1
        Private name_ As String = ""
        ''' <summary>
        '''  The fully qualified name of the API which is included.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Name As String
            Get
                Return name_
            End Get
            Set(value As String)
                name_ = CheckNotNull(value, "value")
            End Set
        End Property

        ''' <summary>Field number for the "root" field.</summary>
        Public Const RootFieldNumber As Integer = 2
        Private root_ As String = ""
        ''' <summary>
        '''  If non-empty specifies a path under which inherited HTTP paths
        '''  are rooted.
        ''' </summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Property Root As String
            Get
                Return root_
            End Get
            Set(value As String)
                root_ = CheckNotNull(value, "value")
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function Equals(other As Object) As Boolean
            Return Equals(TryCast(other, Mixin))
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overloads Function Equals(other As Mixin) As Boolean Implements IEquatable(Of Mixin).Equals
            If ReferenceEquals(other, Nothing) Then
                Return False
            End If

            If ReferenceEquals(other, Me) Then
                Return True
            End If

            If Not Equals(Name, other.Name) Then Return False
            If Not Equals(Root, other.Root) Then Return False
            Return True
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function GetHashCode() As Integer
            Dim hash = 1
            If Name.Length <> 0 Then hash = hash Xor Name.GetHashCode()
            If Root.Length <> 0 Then hash = hash Xor Root.GetHashCode()
            Return hash
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Overrides Function ToString() As String
            Return JsonFormatter.ToDiagnosticString(Me)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub WriteTo(output As CodedOutputStream) Implements IMessage.WriteTo
            If Name.Length <> 0 Then
                output.WriteRawTag(10)
                output.WriteString(Name)
            End If

            If Root.Length <> 0 Then
                output.WriteRawTag(18)
                output.WriteString(Root)
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Function CalculateSize() As Integer Implements IMessage.CalculateSize
            Dim size = 0

            If Name.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(Name)
            End If

            If Root.Length <> 0 Then
                size += 1 + CodedOutputStream.ComputeStringSize(Root)
            End If

            Return size
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub MergeFrom(other As Mixin) Implements IMessageType(Of Mixin).MergeFrom
            If other Is Nothing Then
                Return
            End If

            If other.Name.Length <> 0 Then
                Name = other.Name
            End If

            If other.Root.Length <> 0 Then
                Root = other.Root
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute>
        Public Sub MergeFrom(input As CodedInputStream) Implements IMessage.MergeFrom
            Dim tag As UInteger

            While (CSharpImpl.__Assign(tag, input.ReadTag())) <> 0

                Select Case tag
                    Case 10
                        Name = input.ReadString()
                        Exit Select
                    Case 18
                        Root = input.ReadString()
                        Exit Select
                    Case Else
                        input.SkipLastField()
                End Select
            End While
        End Sub

        Private Class CSharpImpl
            <Obsolete("Please refactor calling code to use normal Visual Basic assignment")>
            Shared Function __Assign(Of T)(ByRef target As T, value As T) As T
                target = value
                Return value
            End Function
        End Class
    End Class

#End Region

End Namespace
#End Region
